version: "3"

services:
  backend:
    build:
      context: ./VM
      dockerfile: Dockerfile.prod
    container_name: backend
    ports:
      - "8000:8000"
      - "9000:9000"
    volumes:
      - ".:/var/www/html"
    restart: unless-stopped
    networks:
      - app
    environment:
      XDEBUG_CONFIG: "client_host=host.docker.internal"
    depends_on:
      - mysql
      - redis

  frontend:
    image: node:alpine
    working_dir: /var/www/html
    container_name: frontend
    volumes:
      - "./client:/var/www/html"
    command: sh -c "npm install && npm run build && npm start"
    restart: unless-stopped
    ports:
      - "3000:3000"
    networks:
      - app

  server:
    image: nginx:alpine
    container_name: nginx_server
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./nginx/nginx.conf/:/etc/nginx/conf.d/default.conf"
    networks:
      - app
    depends_on:
      - backend
      - frontend

  mysql:
    image: "mysql:8.0"
    ports:
      - "${DB_PORT}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
      MYSQL_DATABASE: "${DB_DATABASE}"
      MYSQL_USER: "${DB_USERNAME}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    restart: unless-stopped
    volumes:
      - "appmysql:/var/lib/mysql"
    networks:
      - app

  # Redis.
  redis:
    image: "redis:alpine"
    ports:
      - "${FORWARD_REDIS_PORT:-6379}:6379"
    volumes:
      - "appredis:/data"
    restart: unless-stopped
    networks:
      - app

# Network.
networks:
  app:
    driver: bridge

volumes:
  appmysql:
    driver: local
  appredis:
    driver: local
